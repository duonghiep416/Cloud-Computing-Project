{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducres';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n});\n// cartItems\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\n// LoginInfo\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\n// Shipping address\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","productTopRated","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderDeliver","orderListMy","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["E:/Workspace/Cloud Computing/ProShop/frontend/src/store.js"],"sourcesContent":["import {createStore , combineReducers , applyMiddleware} from 'redux'\r\nimport thunk from  'redux-thunk'\r\nimport {composeWithDevTools} from \"redux-devtools-extension\"\r\nimport {productListReducer , productDetailsReducer, productDeleteReducer, productCreateReducer , productUpdateReducer ,productReviewCreateReducer,productTopRatedReducer } from './reducers/productReducres'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer , userRegisterReducer , userDetailsReducer , userUpdateProfileReducer,  userListReducer , userDeleteReducer,\r\nuserUpdateReducer} from './reducers/userReducers'\r\nimport { orderCreateReducer , orderDetailsReducer , orderPayReducer , orderListMyReducer , orderListReducer , orderDeliverReducer} from './reducers/orderReducers'\r\n\r\nconst reducer=combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated:productTopRatedReducer,\r\n    cart : cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n\r\n\r\n})\r\n// cartItems\r\nconst cartItemsFromStorage= localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')):[]\r\n// LoginInfo\r\nconst userInfoFromStorage= localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')):null\r\n// Shipping address\r\nconst shippingAddressFromStorage= localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')):{}\r\n\r\nconst initialState= {\r\n    cart:{\r\n        cartItems:cartItemsFromStorage,\r\n        shippingAddress:shippingAddressFromStorage\r\n    },\r\n    userLogin: { userInfo:userInfoFromStorage }\r\n};\r\n\r\nconst middleware=[thunk]\r\nconst store=createStore(reducer, initialState , composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store"],"mappings":"AAAA,SAAQA,WAAW,EAAGC,eAAe,EAAGC,eAAe,QAAO,OAAO;AACrE,OAAOC,KAAK,MAAO,aAAa;AAChC,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAAQC,kBAAkB,EAAGC,qBAAqB,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAGC,oBAAoB,EAAEC,0BAA0B,EAACC,sBAAsB,QAAQ,4BAA4B;AAC5M,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,gBAAgB,EAAGC,mBAAmB,EAAGC,kBAAkB,EAAGC,wBAAwB,EAAGC,eAAe,EAAGC,iBAAiB,EACrIC,iBAAiB,QAAO,yBAAyB;AACjD,SAASC,kBAAkB,EAAGC,mBAAmB,EAAGC,eAAe,EAAGC,kBAAkB,EAAGC,gBAAgB,EAAGC,mBAAmB,QAAO,0BAA0B;AAElK,MAAMC,OAAO,GAACzB,eAAe,CAAC;EAC1B0B,WAAW,EAAEtB,kBAAkB;EAC/BuB,cAAc,EAAEtB,qBAAqB;EACrCuB,aAAa,EAAEtB,oBAAoB;EACnCuB,aAAa,EAAEtB,oBAAoB;EACnCuB,aAAa,EAAEtB,oBAAoB;EACnCuB,mBAAmB,EAAEtB,0BAA0B;EAC/CuB,eAAe,EAACtB,sBAAsB;EACtCuB,IAAI,EAAGtB,WAAW;EAClBuB,SAAS,EAAEtB,gBAAgB;EAC3BuB,YAAY,EAAEtB,mBAAmB;EACjCuB,WAAW,EAAEtB,kBAAkB;EAC/BuB,iBAAiB,EAAEtB,wBAAwB;EAC3CuB,QAAQ,EAAEtB,eAAe;EACzBuB,UAAU,EAAEtB,iBAAiB;EAC7BuB,UAAU,EAAEtB,iBAAiB;EAC7BuB,WAAW,EAAEtB,kBAAkB;EAC/BuB,YAAY,EAAEtB,mBAAmB;EACjCuB,QAAQ,EAAEtB,eAAe;EACzBuB,YAAY,EAAEpB,mBAAmB;EACjCqB,WAAW,EAAEvB,kBAAkB;EAC/BwB,SAAS,EAAEvB;AAGf,CAAC,CAAC;AACF;AACA,MAAMwB,oBAAoB,GAAEC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAC,EAAE;AAChH;AACA,MAAMG,mBAAmB,GAAEJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAC,IAAI;AAC/G;AACA,MAAMI,0BAA0B,GAAEL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GAAC,CAAC,CAAC;AAElI,MAAMK,YAAY,GAAE;EAChBrB,IAAI,EAAC;IACDsB,SAAS,EAACR,oBAAoB;IAC9BS,eAAe,EAACH;EACpB,CAAC;EACDnB,SAAS,EAAE;IAAEuB,QAAQ,EAACL;EAAoB;AAC9C,CAAC;AAED,MAAMM,UAAU,GAAC,CAACxD,KAAK,CAAC;AACxB,MAAMyD,KAAK,GAAC5D,WAAW,CAAC0B,OAAO,EAAE6B,YAAY,EAAGnD,mBAAmB,CAACF,eAAe,CAAC,GAAGyD,UAAU,CAAC,CAAC,CAAC;AAEpG,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}